pio.OperatorGroup.source=数据源
pio.OperatorGroup.processing=数据处理
pio.OperatorGroup.algorithmModel=算法建模

#processing operator
pio.DatabaseDataReader.name=读取数据库
pio.DatabaseDataReader.description=读取数据库
pio.DatabaseDataReader.connect.url=数据库连接
pio.DatabaseDataReader.connect.username=用户名
pio.DatabaseDataReader.connect.password=密码
pio.DatabaseDataReader.query=查询语句

pio.SingleViewExampleSource.name=读取单图
pio.SingleViewExampleSource.description=读取单图
pio.SingleViewExampleSource.url=数据源URL
pio.SingleViewExampleSource.data_source=数据源
pio.SingleViewExampleSource.single_view_data_source=单图

pio.HttpSqlExampleSource.name=读取SQL
pio.HttpSqlExampleSource.description=读取SQL
pio.HttpSqlExampleSource.url=SQL数据源URL
pio.HttpSqlExampleSource.sql=SQL查询语句

pio.CSVExampleSource.name=读取CSV文件
pio.CSVExampleSource.description=读取CSV文件
pio.CSVExampleSource.csv_file=CSV文件
pio.CSVExampleSource.column_separators=列分隔符
pio.CSVExampleSource.trim_lines=去首尾空行
pio.CSVExampleSource.use_quotes=使用引号
pio.CSVExampleSource.quotes_character=引号字符
pio.CSVExampleSource.escape_character=转义字符
pio.CSVExampleSource.skip_comments=跳过注释
pio.CSVExampleSource.comment_characters=注释字符

pio.Normalization.name=标准化
pio.Normalization.description=标准化
pio.Normalization.method=选择标准化方法

pio.PreprocessingOperator.return_preprocessing_model = 预处理模型是否返回
pio.PreprocessingOperator.create_view = 创建视图（数据不会更改）

pio.AttributeSubsetSelector.attribute_filter_type = 选择属性
pio.AttributeSubsetSelector.invert_selection = 反向选择
pio.AttributeSubsetSelector.include_special_attributes = 包含指定属性

pio.BlockTypeAttributeFilter.block_type = 属性的块类型
pio.BlockTypeAttributeFilter.use_block_type_exception = 使用块类型异常
pio.BlockTypeAttributeFilter.except_block_type = 排除此块类型
pio.NumericValueAttributeFilter.numeric_condition = 数值条件（如：'>= 5'）
pio.RegexpAttributeFilter.regular_expression = 正则表达式
pio.RegexpAttributeFilter.use_except_expression = 使用异常表达式
pio.RegexpAttributeFilter.except_regular_expression = 排除正则表达式
pio.SingleAttributeFilter.attribute = 选择属性
pio.ValueTypeAttributeFilter.value_type = 属性值类型
pio.ValueTypeAttributeFilter.use_value_type_exception = 使用值类型异常
pio.ValueTypeAttributeFilter.except_value_type = 排除此值类型

pio.RangeNormalizationMethod.min = 标准化后的最小值
pio.RangeNormalizationMethod.max = 标准化后的最大值

pio.ModelApplier.name=模型应用
pio.ModelApplier.description=模型应用
pio.ModelApplier.application_parameters=应用参数
pio.ModelApplier.key=参数键
pio.ModelApplier.value=参数值
pio.ModelApplier.create_view=创建视图

pio.AttributeFilter.name=选择维度
pio.AttributeFilter.description=选择维度
pio.AttributeFilter.subset.attributes=维度

pio.ExampleFilter.name=条件过滤
pio.ExampleFilter.description=条件过滤
pio.ExampleFilter.filters_list=过滤条件
pio.ExampleFilter.filters_logic_and=同时满足所有条件

pio.ChangeAttributeRole.name=设置角色
pio.ChangeAttributeRole.description=设置角色
pio.ChangeAttributeRole.attribute_name=维度名
pio.ChangeAttributeRole.target_role=角色
pio.ChangeAttributeRole.set_additional_roles=设置其他角色

#algorithmModel operator
pio.LinearRegression.name=线性回归
pio.LinearRegression.description=线性回归
pio.LinearRegression.feature_selection=特征选择
pio.LinearRegression.min_tolerance=最小公差
pio.LinearRegression.eliminate_colinear_features=消除共线特征
pio.LinearRegression.use_bias=使用偏置
pio.LinearRegression.ridge=脊

pio.TTestLinearRegressionMethod.alpha = t检验的显著水平
pio.IterativeTTestLinearRegressionMethod.max_iterations = 最大迭代次数
pio.IterativeTTestLinearRegressionMethod.forward_alpha = t检验选择属性的显著水平
pio.IterativeTTestLinearRegressionMethod.backward_alpha = t检验取消选择属性的显著水平

pio.LogisticRegression.name=逻辑回归
pio.LogisticRegression.description=逻辑回归
pio.LogisticRegression.add_intercept= 包含截距
pio.LogisticRegression.start_population_type=开始群体类型
pio.LogisticRegression.max_generations=最大迭代
pio.LogisticRegression.generations_without_improval=没有迭代提升
pio.LogisticRegression.population_size=群体大小
pio.LogisticRegression.tournament_fraction=得分
pio.LogisticRegression.keep_best=确保最优值
pio.LogisticRegression.mutation_type=变异类型
pio.LogisticRegression.selection_type=选择类型
pio.LogisticRegression.crossover_prob=步进概率
pio.LogisticRegression.show_convergence_plot=分类图
pio.LogisticRegression.return_model_performance=返回模型评估指标

pio.ParallelDecisionTreeLearner.name=决策树
pio.ParallelDecisionTreeLearner.description=决策树
pio.ParallelDecisionTreeLearner.criterion=判决方法
pio.ParallelDecisionTreeLearner.maximal_depth=最大深度
pio.ParallelDecisionTreeLearner.apply_pruning=剪枝
pio.ParallelDecisionTreeLearner.confidence=置信度
pio.ParallelDecisionTreeLearner.apply_prepruning=预剪枝
pio.ParallelDecisionTreeLearner.minimal_gain=最小信息增益
pio.ParallelDecisionTreeLearner.minimal_leaf_size=最小叶子树
pio.ParallelDecisionTreeLearner.minimal_size_for_split=最小分割大小
pio.ParallelDecisionTreeLearner.number_of_prepruning_alternatives=可选的预剪枝数

pio.ParallelRandomForestLearner.name = 随机森林
pio.ParallelRandomForestLearner.description = 随机森林
pio.ParallelRandomForestLearner.number_of_trees = 树个数
pio.ParallelRandomForestLearner.guess_subset_ratio = 猜测子集比例
pio.ParallelRandomForestLearner.subset_ratio = 随机选择子集的比例
pio.ParallelRandomForestLearner.voting_strategy = 投票策略

pio.DecisionTreeLearner.maximal_depth=最大深度
pio.DecisionTreeLearner.confidence=置信度
pio.DecisionTreeLearner.number_of_prepruning_alternatives=预剪枝可选的节点数
pio.DecisionTreeLearner.no_pre_pruning=禁止预剪枝
pio.DecisionTreeLearner.no_pruning=禁止修剪


