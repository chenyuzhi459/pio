pio.OperatorGroup.source=数据源
pio.OperatorGroup.processing=数据处理
pio.OperatorGroup.algorithmModel=算法建模

#processing operator
pio.DatabaseDataReader.name=读取数据库
pio.DatabaseDataReader.description=读取数据库
pio.DatabaseDataReader.connect.url=数据库连接
pio.DatabaseDataReader.connect.username=用户名
pio.DatabaseDataReader.connect.password=密码
pio.DatabaseDataReader.query=查询语句

pio.SingleMapExampleSource.name=读取单图数据
pio.SingleMapExampleSource.description=读取单图数据

pio.HttpSqlExampleSource.name=读取SQL数据源数据
pio.HttpSqlExampleSource.description=读取SQL数据源数据
pio.HttpSqlExampleSource.url=SQL数据源URL
pio.HttpSqlExampleSource.sql=SQL查询语句

pio.AttributeFilter.name=选择维度
pio.AttributeFilter.description=选择维度
pio.AttributeFilter.subset.attributes=维度

pio.ExampleFilter.name=条件过滤
pio.ExampleFilter.description=条件过滤
pio.ExampleFilter.filters_list=过滤条件
pio.ExampleFilter.filters_logic_and=同时满足所有条件

pio.ChangeAttributeRole.name=设置角色
pio.ChangeAttributeRole.description=设置角色
pio.ChangeAttributeRole.attribute_name=维度名
pio.ChangeAttributeRole.target_role=角色
pio.ChangeAttributeRole.set_additional_roles=设置其他角色

#algorithmModel operator
pio.LogisticRegression.name=逻辑回归
pio.LogisticRegression.description=逻辑回归
pio.LogisticRegression.add_intercept= 包含截距
pio.LogisticRegression.start_population_type=开始群体类型
pio.LogisticRegression.max_generations=最大迭代
pio.LogisticRegression.generations_without_improval=没有迭代提升
pio.LogisticRegression.population_size=群体大小
pio.LogisticRegression.tournament_fraction=得分
pio.LogisticRegression.keep_best=确保最优值
pio.LogisticRegression.mutation_type=变异类型
pio.LogisticRegression.selection_type=选择类型
pio.LogisticRegression.crossover_prob=步进概率
pio.LogisticRegression.show_convergence_plot=分类图
pio.LogisticRegression.return_model_performance=返回模型评估指标

pio.ParallelDecisionTreeLearner.name=决策树
pio.ParallelDecisionTreeLearner.description=决策树
pio.ParallelDecisionTreeLearner.criterion=判决方法
pio.ParallelDecisionTreeLearner.maximal_depth=最大深度
pio.ParallelDecisionTreeLearner.apply_pruning=剪枝
pio.ParallelDecisionTreeLearner.confidence=剪枝阀值
pio.ParallelDecisionTreeLearner.apply_prepruning=预剪枝
pio.ParallelDecisionTreeLearner.minimal_gain=最小信息增益
pio.ParallelDecisionTreeLearner.minimal_leaf_size=最小叶子树
pio.ParallelDecisionTreeLearner.minimal_size_for_split=最小分割大小
pio.ParallelDecisionTreeLearner.number_of_prepruning_alternatives=可选的预剪枝数

pio.DecisionTreeLearner.maximal_depth=最大深度
pio.DecisionTreeLearner.confidence=置信度
pio.DecisionTreeLearner.number_of_prepruning_alternatives=预剪枝可选的节点数
pio.DecisionTreeLearner.no_pre_pruning=禁止预剪枝
pio.DecisionTreeLearner.no_pruning=禁止修剪


